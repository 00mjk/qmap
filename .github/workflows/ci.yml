name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Installing boost
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew install boost;
          else
            sudo apt-get install -y libboost-program-options-dev
          fi

      - name: Cache Z3
        id: cache-z3
        uses: actions/cache@v2
        with:
          path: z3
          key: ${{ runner.OS }}-z3

      - name: Building Z3
        if: steps.cache-z3.outputs.cache-hit != 'true'
        shell: bash
        run: |
             git clone --depth 1 https://github.com/Z3Prover/z3.git
             cmake -S z3 -B z3/build -DCMAKE_BUILD_TYPE=$BUILD_TYPE
             cmake --build z3/build --config $BUILD_TYPE --parallel 8

      - name: Installing Z3
        shell: bash
        working-directory: ${{github.workspace}}/z3/build
        run: sudo make install

      - name: Configure CMake
        shell: bash
        run: cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_QMAP_TESTS=ON

      - name: Build
        shell: bash
        run: |
             cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --parallel 8 --target qmap_heuristic
             cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --parallel 8 --target qmap_exact
             cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --parallel 8 --target qmap_heuristic_test
             cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --parallel 8 --target qmap_exact_test

      - name: Test
        working-directory: ${{github.workspace}}/build/test
        shell: bash
        run: |
             ./qmap_exact_test
             ./qmap_heuristic_test

      - name: Coverage
        if: runner.OS == 'Linux'
        shell: bash
        run: |
             cmake -S "${{github.workspace}}" -B "${{github.workspace}}/buildCov" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_QMAP_TESTS=ON -DCOVERAGE=1
             cmake --build "${{github.workspace}}/buildCov" --config Debug --target qmap_exact_test
             cmake --build "${{github.workspace}}/buildCov" --config Debug --target qmap_heuristic_test
             cd buildCov/test
             ./qmap_exact_test
             ./qmap_heuristic_test

      - name: Upload coverage to Codecov
        if: runner.OS == 'Linux'
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
