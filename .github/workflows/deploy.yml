name: Deploy to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_BEFORE_ALL_LINUX: >
     /opt/python/cp38-cp38/bin/python -m pip install z3-solver;
  CIBW_ENVIRONMENT_LINUX: "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/python/cp38-cp38/lib/python3.8/site-packages/z3/lib Z3_ROOT=/opt/python/cp38-cp38/lib/python3.8/site-packages/z3 Z3_DIR=/opt/python/cp38-cp38/lib/python3.8/site-packages/z3"
  CIBW_BUILD: cp3?-*
  CIBW_SKIP: "*-win32 *-manylinux_i686 cp35-*"
  CIBW_BUILD_VERBOSITY: 3
  CIBW_TEST_COMMAND: "python -c \"from jkq import qmap\""

jobs:
  build_manylinux_wheels:
    name: Build wheels on manylinux2014
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
              python -m pip install --upgrade pip setuptools wheel cibuildwheel==1.7.4

      - name: Build wheels
        run: |
              python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_macos_wheels:
    name:    Build wheels on macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run:  |
              python -m pip install --upgrade pip setuptools wheel cibuildwheel==1.7.4
              brew install z3

      - name: Build wheels
        run:  |
              python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    name: Build wheels on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
             python -m pip install --upgrade pip setuptools wheel cibuildwheel==1.7.4

      - name: Cache Z3
        id:   cache-z3
        uses: actions/cache@v2
        with:
          path: z3
          key:  ${{ runner.OS }}-z3-4.8.10-static

      - name:  Building Z3
        if:    steps.cache-z3.outputs.cache-hit != 'true'
        shell: bash
        run:   |
               git clone --depth 1 https://github.com/Z3Prover/z3.git
               cmake -S z3 -B z3/build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 16 2019" -A x64 -DZ3_BUILD_LIBZ3_SHARED=FALSE -DZ3_BUILD_EXECUTABLE=False -DZ3_BUILD_TEST_EXECUTABLES=False
               cmake --build z3/build --config Release --parallel 8

      - name: Installing Z3
        shell: bash
        working-directory: ${{github.workspace}}/z3/build
        run: cmake --build . --config Release --target INSTALL;

      - name: Build wheels
        run: |
              python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
             python -m pip install --upgrade pip setuptools wheel
             brew install z3

      - name: Build sdist
        run: python setup.py sdist

      - name: Test sdist
        run: pip install --verbose dist/*.tar.gz

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

#  upload_pypi:
#    needs: [build_manylinux_wheels, build_macos_wheels, build_windows_wheels, build_sdist]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifact
#          path: dist
#
#      - uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.pypi_password }}
